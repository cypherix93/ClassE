{"version":3,"sources":["angular-bundle.js"],"names":["AngularApp","angular","module","config","$httpProvider","interceptors","push","$window","request","req","headers","sessionStorage","token","$location","responseError","error","status","path","toastrConfig","autoDismiss","positionClass","preventOpenDuplicates","$routeProvider","$locationProvider","html5Mode","when","templateUrl","urlattr","base","sub","run","$rootScope","ConfigSvc","IdentitySvc","AuthSvc","ModalSvc","getAppMeta","then","response","AppMeta","Name","data","name","Version","version","Description","description","Copyright","copyright","Authors","authors","PageName","bootstrapSessionUser","initGlobalModals","service","$q","$http","exports","this","get","success","currentUser","loginUser","email","password","def","defer","post","resolve","promise","logoutUser","logout","undefined","isAuthenticated","$compile","ModalInstance","element","options","_instance","state","modal","show","width","on","css","onOpen","onClose","open","close","createModal","scope","$new","append","modalInstance","modals","login","controller","$scope","toastr","message"],"mappings":"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","file":"angular-bundle.min.js","sourcesContent":["// Global Angular App Declaration\r\nvar AngularApp = angular.module(\"AngularApp\",\r\n    [\r\n        \"ngSanitize\",\r\n        \"ngRoute\",\r\n        \"ngAnimate\",\r\n        \"ngMessages\",\r\n        \"ui.bootstrap\",\r\n        \"toastr\"\r\n    ]);\n// Configure Angular App Preferences\r\nAngularApp.config(function ($httpProvider)\r\n{\r\n    $httpProvider.interceptors.push(function ($window)\r\n    {\r\n        return {\r\n            request: function (req)\r\n            {\r\n                req.headers = req.headers || {};\r\n                if ($window.sessionStorage.token)\r\n                {\r\n                    req.headers[\"x-access-token\"] = $window.sessionStorage.token;\r\n                }\r\n                return req;\r\n            }\r\n        };\r\n    });\r\n\r\n    $httpProvider.interceptors.push(function ($location)\r\n    {\r\n        return {\r\n            \"responseError\": function (error)\r\n            {\r\n                if (error.status === 404)\r\n                    $location.path(\"/error/404\");\r\n            }\r\n        };\r\n    });\r\n});\r\n\r\nAngularApp.config(function (toastrConfig)\r\n{\r\n    toastrConfig.autoDismiss = true;\r\n    toastrConfig.positionClass = \"toast-bottom-center\";\r\n    toastrConfig.preventOpenDuplicates = true;\r\n});\n// Configure Angular App Routes\r\nAngularApp.config(function ($routeProvider, $locationProvider)\r\n{\r\n    $locationProvider.html5Mode(false);\r\n\r\n    $routeProvider\r\n    // route for the home page\r\n        .when(\"/\",\r\n            {\r\n                templateUrl: \"views/home/index.html\"\r\n            })\r\n        // route patterns for the other pages\r\n        .when(\"/:base/:sub\",\r\n            {\r\n                templateUrl: function (urlattr)\r\n                {\r\n                    return \"views/\" + urlattr.base + \"/\" + urlattr.sub + \".html\";\r\n                }\r\n            })\r\n        .when(\"/:base\",\r\n            {\r\n                templateUrl: function (urlattr)\r\n                {\r\n                    return \"views/\" + urlattr.base + \"/index.html\";\r\n                }\r\n            });\r\n});\n// Configure Angular App Initialization\r\nAngularApp.run(function ($rootScope, ConfigSvc, IdentitySvc, AuthSvc, ModalSvc)\r\n{\r\n    // App Metadata setup\r\n    ConfigSvc.getAppMeta()\r\n        .then(function (response)\r\n        {\r\n            $rootScope.AppMeta = {\r\n                Name: response.data.name,\r\n                Version: response.data.version,\r\n                Description: response.data.description,\r\n                Copyright: response.data.copyright,\r\n                Authors: response.data.authors\r\n            };\r\n        });\r\n\r\n    $rootScope.PageName = \"Home\";\r\n\r\n    // Global services\r\n    $rootScope.IdentitySvc = IdentitySvc;\r\n    $rootScope.AuthSvc = AuthSvc;\r\n    $rootScope.ModalSvc = ModalSvc;\r\n\r\n    // Setup user in session if any\r\n    AuthSvc.bootstrapSessionUser();\r\n\r\n    // Init Global Modals\r\n    ModalSvc.initGlobalModals();\r\n});\nAngularApp.service(\"AuthSvc\", function ($q, $http, $window, IdentitySvc)\r\n{\r\n    var exports = this;\r\n\r\n    exports.bootstrapSessionUser = function ()\r\n    {\r\n        $http.get(\"http://localhost:3960/auth/getSessionUser\")\r\n            .success(function (response)\r\n            {\r\n                if (response.success)\r\n                    IdentitySvc.currentUser = response.data;\r\n            });\r\n    };\r\n\r\n    exports.loginUser = function (email, password)\r\n    {\r\n        var def = $q.defer();\r\n\r\n        $http.post(\"http://localhost:3960/auth/login\", {email: email, password: password})\r\n            .success(function (response)\r\n            {\r\n                if (response.success)\r\n                {\r\n                    IdentitySvc.currentUser = response.data;\r\n\r\n                    $window.sessionStorage.token = IdentitySvc.currentUser.token;\r\n                }\r\n                else\r\n                {\r\n                    delete $window.sessionStorage.token;\r\n                }\r\n\r\n                def.resolve(response);\r\n            });\r\n\r\n        return def.promise;\r\n    };\r\n\r\n    exports.logoutUser = function ()\r\n    {\r\n        var def = $q.defer();\r\n\r\n        $http.post(\"http://localhost:3960/auth/logout\", {logout: true})\r\n            .success(function (response)\r\n            {\r\n                if (response.success)\r\n                {\r\n                    delete IdentitySvc.currentUser;\r\n                    delete $window.sessionStorage.token;\r\n                }\r\n\r\n                def.resolve(response);\r\n            });\r\n\r\n        return def.promise;\r\n    };\r\n});\nAngularApp.service(\"IdentitySvc\", function ()\r\n{\r\n    var exports = this;\r\n\r\n    // Current User Identity\r\n    exports.currentUser = undefined;\r\n\r\n    // Function to check if the current user is authenticated\r\n    exports.isAuthenticated = function ()\r\n    {\r\n        return !!exports.currentUser;\r\n    };\r\n});\nAngularApp.service(\"ConfigSvc\", function($http)\r\n{\r\n    var exports = this;\r\n\r\n    exports.getAppMeta = function()\r\n    {\r\n        return $http.get(\"angular/meta.json\");\r\n    };\r\n});\nAngularApp.service(\"ModalSvc\", function ($q, $http, $compile, $rootScope)\r\n{\r\n    var exports = this;\r\n\r\n    var ModalInstance = function (element, options)\r\n    {\r\n        var _instance = this;\r\n\r\n        // Fields\r\n        _instance.element = element;\r\n        _instance.state = \"default\";\r\n\r\n        // Init the modal\r\n        _instance.element.modal({\r\n            show: false\r\n        });\r\n\r\n        // Width fix\r\n        _instance.element.width(options.width);\r\n\r\n        // Event Handlers\r\n        _instance.element.on(\"show\", function ()\r\n        {\r\n            // Margin fix\r\n            _instance.element.css(\"margin-left\", -(_instance.element.width() / 2));\r\n\r\n            if (options.onOpen)\r\n                options.onOpen(_instance.element);\r\n        });\r\n        _instance.element.on(\"hidden\", function ()\r\n        {\r\n            if (options.onClose)\r\n                options.onClose(_instance.element);\r\n        });\r\n\r\n        // Open and Close functions\r\n        _instance.open = function ()\r\n        {\r\n            _instance.element.modal(\"show\");\r\n        };\r\n        _instance.close = function ()\r\n        {\r\n            _instance.element.modal(\"hide\");\r\n        };\r\n    };\r\n\r\n    // Create modal from Template URL\r\n    exports.createModal = function (templateUrl, options)\r\n    {\r\n        var def = $q.defer();\r\n\r\n        // Get the template markup from the URL provided\r\n        $http.get(templateUrl)\r\n            .success(function (response)\r\n            {\r\n                var element = angular.element(response);\r\n\r\n                var scope = $rootScope.$new(true);\r\n                $compile(element)(scope);\r\n\r\n                angular.element(\"#content-container\").append(element);\r\n\r\n                var modalInstance = new ModalInstance(element, options || {width: 600});\r\n\r\n                def.resolve(modalInstance);\r\n            });\r\n\r\n        return def.promise;\r\n    };\r\n\r\n    // Store for all the global modals\r\n    exports.modals = {};\r\n\r\n    // Global modals init function\r\n    exports.initGlobalModals = function ()\r\n    {\r\n        // Login Modal\r\n        exports.createModal(\"views/_shared/auth/login.html\")\r\n            .then(function(modalInstance)\r\n            {\r\n                exports.modals.login = modalInstance;\r\n            });\r\n    };\r\n});\nAngularApp.controller(\"LoginModalCtrl\", function ($scope, AuthSvc, IdentitySvc, ModalSvc, toastr)\r\n{\r\n    $scope.login = function ()\r\n    {\r\n        if (!$scope.email || !$scope.password)\r\n        {\r\n            toastr.error(\"Both email and password needs to be provided.\");\r\n            return;\r\n        }\r\n\r\n        AuthSvc.loginUser($scope.email, $scope.password)\r\n            .then(function (response)\r\n            {\r\n                if (!response.success)\r\n                {\r\n                    toastr.error(response.message);\r\n                    return;\r\n                }\r\n\r\n                // Close the login modal\r\n                ModalSvc.modals.login.close();\r\n\r\n                // Reset the form\r\n                delete $scope.email;\r\n                delete $scope.password;\r\n\r\n                // Display toast message\r\n                toastr.success(\"Welcome back \" + IdentitySvc.currentUser.email);\r\n            });\r\n    };\r\n});"],"sourceRoot":"/source/"}