{"version":3,"sources":["angular-bundle.js"],"names":["AngularApp","angular","module","config","$httpProvider","defaults","withCredentials","interceptors","push","$location","responseError","error","status","path","toastrConfig","autoDismiss","positionClass","preventOpenDuplicates","$stateProvider","$urlRouterProvider","$locationProvider","html5Mode","state","url","templateUrl","urlattr","run","$rootScope","ConfigSvc","IdentitySvc","AuthSvc","ModalSvc","getAppMeta","then","response","AppMeta","Name","data","name","Version","version","Description","description","Copyright","copyright","Authors","authors","PageName","bootstrapSessionUser","initGlobalModals","service","$q","$window","ApiSvc","exports","this","get","success","currentUser","registerUser","user","def","defer","post","resolve","promise","loginUser","email","password","sessionStorage","token","logoutUser","logout","undefined","isAuthenticated","$http","ConstantsSvc","baseUrl","apiBaseUrl","bindMethods","i","arguments","length","arg","method","apiUrl","bindMethodsWithData","$compile","ModalInstance","element","options","_instance","onOpen","onClose","modal","show","width","on","css","open","close","createModal","scope","$new","append","modalInstance","modals","waitUntilReady","modalName","watch","$watch","controller","$scope","$state","toastr","login","go","message","register"],"mappings":"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","file":"angular-bundle.min.js","sourcesContent":["// Global Angular App Declaration\r\nvar AngularApp = angular.module(\"AngularApp\",\r\n    [\r\n        \"ngSanitize\",\r\n        \"ngAnimate\",\r\n        \"ngMessages\",\r\n        \"ui.router\",\r\n        \"ui.bootstrap\",\r\n        \"toastr\"\r\n    ]);\n// Configure Angular App Preferences\r\n\r\n// HTTP Configuration, like cookie, JWT and error handling\r\nAngularApp.config(function ($httpProvider)\r\n{\r\n    $httpProvider.defaults.withCredentials = true;\r\n\r\n    $httpProvider.interceptors.push(function ($location)\r\n    {\r\n        return {\r\n            \"responseError\": function (error)\r\n            {\r\n                if (error.status === 404)\r\n                    $location.path(\"/error/404\");\r\n            }\r\n        };\r\n    });\r\n});\r\n\r\nAngularApp.config(function (toastrConfig)\r\n{\r\n    toastrConfig.autoDismiss = true;\r\n    toastrConfig.positionClass = \"toast-bottom-center\";\r\n    toastrConfig.preventOpenDuplicates = true;\r\n});\n// Configure Angular App Routes\r\nAngularApp.config(function ($stateProvider, $urlRouterProvider, $locationProvider)\r\n{\r\n    $locationProvider.html5Mode(false);\r\n\r\n    // Home page routes\r\n    $stateProvider.state(\"home\",\r\n        {\r\n            url: \"/\",\r\n            templateUrl: \"views/home/index.html\"\r\n        });\r\n\r\n    // Error routes\r\n    $stateProvider.state(\"error\",\r\n        {\r\n            url: \"/error/:status\",\r\n            templateUrl: function (urlattr)\r\n            {\r\n                return \"views/error/\" + urlattr.status + \".html\";\r\n            }\r\n        });\r\n\r\n    // Auth routes\r\n    $stateProvider.state(\"login\",\r\n        {\r\n            url: \"/login\",\r\n            templateUrl: \"views/auth/login.html\"\r\n        });\r\n    $stateProvider.state(\"register\",\r\n        {\r\n            url: \"/register\",\r\n            templateUrl: \"views/auth/register.html\"\r\n        });\r\n});\n// Configure Angular App Initialization\r\nAngularApp.run(function ($rootScope, ConfigSvc, IdentitySvc, AuthSvc, ModalSvc)\r\n{\r\n    // App Metadata setup\r\n    ConfigSvc.getAppMeta()\r\n        .then(function (response)\r\n        {\r\n            $rootScope.AppMeta = {\r\n                Name: response.data.name,\r\n                Version: response.data.version,\r\n                Description: response.data.description,\r\n                Copyright: response.data.copyright,\r\n                Authors: response.data.authors\r\n            };\r\n        });\r\n\r\n    $rootScope.PageName = \"Home\";\r\n\r\n    // Global services\r\n    $rootScope.IdentitySvc = IdentitySvc;\r\n    $rootScope.AuthSvc = AuthSvc;\r\n    $rootScope.ModalSvc = ModalSvc;\r\n\r\n    // Setup user in session if any\r\n    AuthSvc.bootstrapSessionUser();\r\n\r\n    // Init Global Modals\r\n    ModalSvc.initGlobalModals();\r\n});\nAngularApp.service(\"AuthSvc\", function ($q, $window, ApiSvc, IdentitySvc)\r\n{\r\n    var exports = this;\r\n\r\n    exports.bootstrapSessionUser = function ()\r\n    {\r\n        ApiSvc.get(\"/auth/me\")\r\n            .success(function (response)\r\n            {\r\n                if (response.success)\r\n                    IdentitySvc.currentUser = response.data;\r\n            });\r\n    };\r\n\r\n    exports.registerUser = function (user)\r\n    {\r\n        var def = $q.defer();\r\n\r\n        ApiSvc.post(\"/auth/register\", user)\r\n            .success(function (response)\r\n            {\r\n                def.resolve(response);\r\n            });\r\n\r\n        return def.promise;\r\n    };\r\n\r\n    exports.loginUser = function (email, password)\r\n    {\r\n        var def = $q.defer();\r\n\r\n        ApiSvc.post(\"/auth/login\", {email: email, password: password})\r\n            .success(function (response)\r\n            {\r\n                if (response.success)\r\n                {\r\n                    IdentitySvc.currentUser = response.data;\r\n\r\n                    $window.sessionStorage.token = IdentitySvc.currentUser.token;\r\n                }\r\n                else\r\n                {\r\n                    delete $window.sessionStorage.token;\r\n                }\r\n\r\n                def.resolve(response);\r\n            });\r\n\r\n        return def.promise;\r\n    };\r\n\r\n    exports.logoutUser = function ()\r\n    {\r\n        var def = $q.defer();\r\n\r\n        ApiSvc.post(\"/auth/logout\", {logout: true})\r\n            .success(function (response)\r\n            {\r\n                if (response.success)\r\n                {\r\n                    delete IdentitySvc.currentUser;\r\n                    delete $window.sessionStorage.token;\r\n                }\r\n\r\n                def.resolve(response);\r\n            });\r\n\r\n        return def.promise;\r\n    };\r\n});\nAngularApp.service(\"IdentitySvc\", function ()\r\n{\r\n    var exports = this;\r\n\r\n    // Current User Identity\r\n    exports.currentUser = undefined;\r\n\r\n    // Function to check if the current user is authenticated\r\n    exports.isAuthenticated = function ()\r\n    {\r\n        return !!exports.currentUser;\r\n    };\r\n});\nAngularApp.service(\"ApiSvc\", function ($http, ConstantsSvc)\r\n{\r\n    var exports = this;\r\n\r\n    var baseUrl = ConstantsSvc.apiBaseUrl;\r\n\r\n    var bindMethods = function ()\r\n    {\r\n        for (var i = 0; i < arguments.length; i++)\r\n        {\r\n            var arg = arguments[i];\r\n\r\n            exports[arg] = (function(method)\r\n            {\r\n                return function (apiUrl, config)\r\n                {\r\n                    return $http[method](baseUrl + apiUrl, config);\r\n                }\r\n            })(arg);\r\n        }\r\n    };\r\n\r\n    var bindMethodsWithData = function ()\r\n    {\r\n        for (var i = 0; i < arguments.length; i++)\r\n        {\r\n            var arg = arguments[i];\r\n\r\n            exports[arg] = (function(method)\r\n            {\r\n                return function (apiUrl, data, config)\r\n                {\r\n                    return $http[method](baseUrl + apiUrl, data, config);\r\n                }\r\n            })(arg);\r\n        }\r\n    };\r\n\r\n    bindMethods(\"get\", \"delete\", \"head\", \"jsonp\");\r\n    bindMethodsWithData(\"post\", \"put\", \"patch\");\r\n});\nAngularApp.service(\"ModalSvc\", function ($q, $http, $compile, $rootScope)\r\n{\r\n    var exports = this;\r\n\r\n    var ModalInstance = function (element, options)\r\n    {\r\n        var _instance = this;\r\n\r\n        // Fields\r\n        _instance.element = element;\r\n        _instance.state = \"default\";\r\n\r\n        _instance.onOpen = options.onOpen;\r\n        _instance.onClose = options.onClose;\r\n\r\n        // Init the modal\r\n        _instance.element.modal({\r\n            show: false\r\n        });\r\n\r\n        // Width fix\r\n        _instance.element.width(options.width);\r\n\r\n        // Event Handlers\r\n        _instance.element.on(\"show\", function ()\r\n        {\r\n            // Margin fix\r\n            _instance.element.css(\"margin-left\", -(_instance.element.width() / 2));\r\n\r\n            if (_instance.onOpen)\r\n                _instance.onOpen();\r\n        });\r\n        _instance.element.on(\"hidden\", function ()\r\n        {\r\n            if (_instance.onClose)\r\n                _instance.onClose();\r\n        });\r\n\r\n        // Open and Close functions\r\n        _instance.open = function ()\r\n        {\r\n            _instance.element.modal(\"show\");\r\n        };\r\n        _instance.close = function ()\r\n        {\r\n            _instance.element.modal(\"hide\");\r\n        };\r\n    };\r\n\r\n    // Create modal from Template URL\r\n    exports.createModal = function (templateUrl, options)\r\n    {\r\n        var def = $q.defer();\r\n\r\n        // Get the template markup from the URL provided\r\n        $http.get(templateUrl)\r\n            .success(function (response)\r\n            {\r\n                var element = angular.element(response);\r\n\r\n                var scope = $rootScope.$new(true);\r\n                $compile(element)(scope);\r\n\r\n                angular.element(\"#content-container\").append(element);\r\n\r\n                var modalInstance = new ModalInstance(element, options || {width: 600});\r\n\r\n                def.resolve(modalInstance);\r\n            });\r\n\r\n        return def.promise;\r\n    };\r\n\r\n    // Store for all the global modals\r\n    exports.modals = {};\r\n\r\n    exports.waitUntilReady = function (modalName)\r\n    {\r\n        var def = $q.defer();\r\n\r\n        var watch = $rootScope.$watch(function()\r\n        {\r\n            return !!exports.modals[modalName];\r\n        }, function()\r\n        {\r\n            def.resolve(exports.modals[modalName]);\r\n            watch();\r\n        });\r\n\r\n        return def.promise;\r\n    };\r\n\r\n    // Global modals init function\r\n    exports.initGlobalModals = function ()\r\n    {\r\n    };\r\n});\nAngularApp.service(\"ConfigSvc\", function($http)\r\n{\r\n    var exports = this;\r\n\r\n    exports.getAppMeta = function()\r\n    {\r\n        return $http.get(\"angular/meta.json\");\r\n    };\r\n});\nAngularApp.service(\"ConstantsSvc\", function ()\r\n{\r\n    var exports = this;\r\n\r\n    exports.apiBaseUrl = \"http://localhost:3960\";\r\n});\nAngularApp.controller(\"LoginCtrl\", function ($scope, $state, AuthSvc, IdentitySvc, ModalSvc, toastr)\r\n{\r\n    $scope.login = function ()\r\n    {\r\n        if (!$scope.email || !$scope.password)\r\n        {\r\n            toastr.error(\"Both email and password needs to be provided.\");\r\n            return;\r\n        }\r\n\r\n        AuthSvc.loginUser($scope.email, $scope.password)\r\n            .then(function (response)\r\n            {\r\n                if (!response.success)\r\n                {\r\n                    toastr.error(response.message);\r\n                    return;\r\n                }\r\n\r\n                // Redirect to home page\r\n                $state.go(\"home\");\r\n\r\n                // Display toast message\r\n                toastr.success(\"Welcome back \" + IdentitySvc.currentUser.email);\r\n            });\r\n    };\r\n});\nAngularApp.controller(\"RegisterCtrl\", function ($scope, $state, AuthSvc, IdentitySvc, ModalSvc, toastr)\r\n{\r\n    $scope.user = {};\r\n\r\n    $scope.register = function ()\r\n    {\r\n        if (!$scope.user.email || !$scope.user.password)\r\n        {\r\n            toastr.error(\"Both email and password needs to be provided.\");\r\n            return;\r\n        }\r\n\r\n        AuthSvc.registerUser($scope.user)\r\n            .then(function (response)\r\n            {\r\n                if (!response.success)\r\n                {\r\n                    toastr.error(response.message);\r\n                    return;\r\n                }\r\n\r\n                // Redirect to login\r\n                $state.go(\"login\");\r\n\r\n                // Display toast message\r\n                toastr.success(\"Thanks for signing up \" + IdentitySvc.currentUser.email);\r\n            });\r\n    };\r\n});"],"sourceRoot":"/source/"}