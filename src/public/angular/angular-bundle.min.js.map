{"version":3,"sources":["angular-bundle.js"],"names":["AngularApp","angular","module","config","$httpProvider","interceptors","push","$location","responseError","error","status","path","toastrConfig","autoDismiss","positionClass","preventOpenDuplicates","$routeProvider","$locationProvider","html5Mode","when","templateUrl","urlattr","base","sub","run","$rootScope","ConfigSvc","IdentitySvc","ModalSvc","getAppMeta","then","response","AppMeta","Name","data","name","Version","version","Description","description","Copyright","copyright","Authors","authors","PageName","initGlobalModals","service","$q","$http","exports","this","loginUser","email","password","def","defer","post","success","currentUser","resolve","promise","undefined","isAuthenticated","get","$compile","ModalInstance","element","options","_instance","$","state","open","modal","close","dialog","show","width","on","css","onOpen","onClose","createModal","modalInstance","modals","login","controller","$scope","AuthSvc","toastr","doLogin","message"],"mappings":"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","file":"angular-bundle.min.js","sourcesContent":["// Global Angular App Declaration\r\nvar AngularApp = angular.module(\"AngularApp\",\r\n    [\r\n        \"ngSanitize\",\r\n        \"ngRoute\",\r\n        \"ngAnimate\",\r\n        \"ngMessages\",\r\n        \"ui.bootstrap\",\r\n        \"toastr\"\r\n    ]);\n// Configure Angular App Preferences\r\nAngularApp.config(function ($httpProvider)\r\n{\r\n    $httpProvider.interceptors.push(function ($location)\r\n    {\r\n        return {\r\n            \"responseError\": function (error)\r\n            {\r\n                if (error.status === 404)\r\n                    $location.path(\"/error/404\");\r\n            }\r\n        };\r\n    });\r\n});\r\n\r\nAngularApp.config(function (toastrConfig)\r\n{\r\n    toastrConfig.autoDismiss = true;\r\n    toastrConfig.positionClass = \"toast-bottom-center\";\r\n    toastrConfig.preventOpenDuplicates = true;\r\n});\n// Configure Angular App Routes\r\nAngularApp.config(function ($routeProvider, $locationProvider)\r\n{\r\n    $locationProvider.html5Mode(false);\r\n\r\n    $routeProvider\r\n    // route for the home page\r\n        .when(\"/\",\r\n            {\r\n                templateUrl: \"views/home/index.html\"\r\n            })\r\n        // route patterns for the other pages\r\n        .when(\"/:base/:sub\",\r\n            {\r\n                templateUrl: function (urlattr)\r\n                {\r\n                    return \"views/\" + urlattr.base + \"/\" + urlattr.sub + \".html\";\r\n                }\r\n            })\r\n        .when(\"/:base\",\r\n            {\r\n                templateUrl: function (urlattr)\r\n                {\r\n                    return \"views/\" + urlattr.base + \"/index.html\";\r\n                }\r\n            });\r\n});\n// Configure Angular App Initialization\r\nAngularApp.run(function ($rootScope, ConfigSvc, IdentitySvc, ModalSvc)\r\n{\r\n    // App Metadata setup\r\n    ConfigSvc.getAppMeta()\r\n        .then(function (response)\r\n        {\r\n            $rootScope.AppMeta = {\r\n                Name: response.data.name,\r\n                Version: response.data.version,\r\n                Description: response.data.description,\r\n                Copyright: response.data.copyright,\r\n                Authors: response.data.authors\r\n            };\r\n        });\r\n\r\n    $rootScope.PageName = \"Home\";\r\n\r\n    // Global services\r\n    $rootScope.IdentitySvc = IdentitySvc;\r\n    $rootScope.ModalSvc = ModalSvc;\r\n\r\n    // Init Global Modals\r\n    ModalSvc.initGlobalModals();\r\n});\nAngularApp.service(\"AuthSvc\", function ($q, $http, IdentitySvc)\r\n{\r\n    var exports = this;\r\n\r\n    exports.loginUser = function (email, password)\r\n    {\r\n        var def = $q.defer();\r\n\r\n        $http.post(\"http://localhost:3960/auth/login\", {email: email, password: password})\r\n            .success(function (response)\r\n            {\r\n                if (response.success)\r\n                    IdentitySvc.currentUser = response.data;\r\n\r\n                def.resolve(response);\r\n            });\r\n\r\n        return def.promise;\r\n    };\r\n});\nAngularApp.service(\"IdentitySvc\", function ()\r\n{\r\n    var exports = this;\r\n\r\n    // Current User Identity\r\n    exports.currentUser = undefined;\r\n\r\n    // Function to check if the current user is authenticated\r\n    exports.isAuthenticated = function ()\r\n    {\r\n        return !!exports.currentUser;\r\n    };\r\n});\nAngularApp.service(\"ConfigSvc\", function($http)\r\n{\r\n    var exports = this;\r\n\r\n    exports.getAppMeta = function()\r\n    {\r\n        return $http.get(\"angular/meta.json\");\r\n    };\r\n});\nAngularApp.service(\"ModalSvc\", function ($q, $http, $compile, $rootScope)\r\n{\r\n    var exports = this;\r\n\r\n    var ModalInstance = function (element, options)\r\n    {\r\n        var _instance = this;\r\n\r\n        // Fields\r\n        _instance.element = $(element);\r\n        _instance.state = \"Default\";\r\n        _instance.open = function ()\r\n        {\r\n            _instance.element.modal(\"show\");\r\n        };\r\n        _instance.close = function ()\r\n        {\r\n            _instance.element.modal(\"hide\");\r\n        };\r\n\r\n        var dialog = _instance.element;\r\n\r\n        // Init the modal\r\n        dialog.modal({\r\n            show: false\r\n        });\r\n\r\n        // Width fix\r\n        dialog.width(options.width);\r\n\r\n        // Event Handlers\r\n        dialog.on(\"show\", function ()\r\n        {\r\n            // Margin fix\r\n            dialog.css(\"margin-left\", -(dialog.width() / 2));\r\n\r\n            if (options.onOpen)\r\n                options.onOpen(dialog);\r\n        });\r\n        dialog.on(\"hidden\", function ()\r\n        {\r\n            if (options.onClose)\r\n                options.onClose(dialog);\r\n        });\r\n\r\n        // Finally compile the template with angular\r\n        _instance.element = $compile(dialog)($rootScope);\r\n    };\r\n\r\n    // Create modal from Template URL\r\n    exports.createModal = function (templateUrl, options)\r\n    {\r\n        var def = $q.defer();\r\n\r\n        // Get the template markup from the URL provided\r\n        $http.get(templateUrl)\r\n            .success(function (response)\r\n            {\r\n                var modalInstance = new ModalInstance(response, options || {width: 600});\r\n                def.resolve(modalInstance);\r\n            });\r\n\r\n        return def.promise;\r\n    };\r\n\r\n    // Store for all the global modals\r\n    exports.modals = {};\r\n\r\n    // Global modals init function\r\n    exports.initGlobalModals = function ()\r\n    {\r\n        // Login Modal\r\n        exports.createModal(\"views/_shared/auth/login.html\")\r\n            .then(function(modalInstance)\r\n            {\r\n                exports.modals.login = modalInstance;\r\n            });\r\n    };\r\n});\nAngularApp.controller(\"LoginModalCtrl\", function ($scope, AuthSvc, IdentitySvc, ModalSvc, toastr)\r\n{\r\n    $scope.doLogin = function ()\r\n    {\r\n        if (!$scope.email || !$scope.password)\r\n        {\r\n            toastr.error(\"Both email and password needs to be provided.\");\r\n            return;\r\n        }\r\n\r\n        AuthSvc.loginUser($scope.email, $scope.password)\r\n            .then(function (response)\r\n            {\r\n                if (!response.success)\r\n                {\r\n                    toastr.error(response.message);\r\n                    return;\r\n                }\r\n\r\n                // Close the login modal\r\n                ModalSvc.modals.login.close();\r\n\r\n                // Reset the form\r\n                $scope.email = undefined;\r\n                $scope.password = undefined;\r\n\r\n                // Display toast message\r\n                toastr.success(\"Welcome back \" + IdentitySvc.currentUser.email);\r\n            });\r\n    };\r\n});"],"sourceRoot":"/source/"}